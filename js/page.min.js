let LOGIN_SERVER_ADDRESS="https://forums.ourmachinery.com:2053";let LOCAL_TEST_SERVER_ADDRESS="http://localhost:2053";let BACKEND_ADDRESS=LOGIN_SERVER_ADDRESS;function serverBackend(host){async function apiCall(path,data){let url=host+path;try{let response=await fetch(url,{method:'POST',mode:'cors',cache:'no-cache',credentials:'same-origin',redirect:'follow',referrerPolicy:'no-referrer',body:JSON.stringify(data)});return response.json();}catch(e){return{error:"no connection to server"}}}
async function verifySignIn(email,password){return await apiCall("/sign-in",{email:email,password:password});}
async function verifySignUp(email,password,data){return await apiCall("/sign-up",{email:email,password:password,data:data});}
async function sendEmailVerificationCode(token){return await apiCall("/send-email-verification-code",{token:token});}
async function checkEmailVerificationCode(token,verificationCode){return await apiCall("/check-email-verification-code",{token:token,verificationCode:verificationCode});}
async function sendPasswordResetCode(email){return await apiCall("/send-password-reset-code",{email:email});}
async function resetPassword(email,verificationCode,newPassword){return await apiCall("/reset-password",{email:email,verificationCode:verificationCode,newPassword:newPassword});}
async function changePassword(token,oldPassword,newPassword){return await apiCall("/change-password",{token:token,oldPassword:oldPassword,newPassword:newPassword});}
async function getUserEmail(token){let base64Url=token.split('.')[1];let base64=base64Url.replace(/-/g,'+').replace(/_/g,'/');let jsonPayload=decodeURIComponent(atob(base64).split('').map(function(c){return '%'+('00'+c.charCodeAt(0).toString(16)).slice(-2);}).join(''));return JSON.parse(jsonPayload).user;}
async function getUserProfile(token){return await apiCall("/get-user-profile",{token:token});}
async function updateUserProfile(token,data){return await apiCall("/update-user-profile",{token:token,githubAccount:data.githubAccount,data:data.data});}
async function deleteAccount(token,password){return await apiCall("/delete-account",{token:token,password:password});}
async function listLikes(token){return await apiCall("/list-likes",{token:token});}
async function like(token,thing,like){return await apiCall("/like",{token:token,like:{thing:thing,like:like}});}
return{verifySignIn:verifySignIn,verifySignUp:verifySignUp,sendEmailVerificationCode:sendEmailVerificationCode,checkEmailVerificationCode:checkEmailVerificationCode,sendPasswordResetCode:sendPasswordResetCode,resetPassword:resetPassword,changePassword:changePassword,getUserEmail:getUserEmail,getUserProfile:getUserProfile,updateUserProfile:updateUserProfile,deleteAccount:deleteAccount,listLikes:listLikes,like:like,}}
let backend=serverBackend(BACKEND_ADDRESS)
function formError(err){let formError=document.getElementById("form-error");if(!formError.classList.contains("show")){formError.classList.add("show");}
formError.textContent=err;let formResult=document.getElementById("form-result");if(formResult){if(!formResult.classList.contains("hidden")){formResult.classList.add("hidden");}
if(formResult.classList.contains("show")){formResult.classList.remove("show");}}
window.scroll({top:0,left:0,behavior:'smooth'});}
function formResult(err){let formResult=document.getElementById("form-result");if(!formResult.classList.contains("show")){formResult.classList.add("show");}
formResult.textContent=err;let formError=document.getElementById("form-error");if(formError)
{if(!formError.classList.contains("hidden")){formError.classList.add("hidden");}
if(formError.classList.contains("show")){formError.classList.remove("show");}}
window.scroll({top:0,left:0,behavior:'smooth'});}
function checkEmailSyntax(email){let re=/\S+@\S+\.\S+/;return re.test(email);}
function hideClass(name){let all=document.getElementsByClassName(name);for(let i=0;i<all.length;i++){let elem=all[i];elem.classList.add("d-none");}}
async function signIn(){let email=document.getElementById("sign-in-email").value.trim();let password=document.getElementById("sign-in-password").value;let result=await backend.verifySignIn(email,password);if(result.ok&&result.token){localStorage.sessionToken=result.token;if(document.referrer.includes("/apidoc/"))
window.location=document.referrer;else
window.location="index.html";}else if(result.verifyEmail&&result.token){localStorage.sessionToken=result.token;await backend.sendEmailVerificationCode(result.token);location.href="/confirm-email.html";}else if(result.error){var inputs=document.querySelectorAll('input');Array.prototype.slice.call(inputs).forEach(function(elm){if(elm.type=="email"||elm.type=="password")
elm.setCustomValidity(result.error);});formError(result.error);}else{console.log("Unexpected sign-in result",result);}}
function signOut(){localStorage.removeItem("sessionToken");initLogin();location.href="/";}
async function signUp(){let email=document.getElementById("sign-up-email").value.trim();let password=document.getElementById("sign-up-password").value;let confirmPassword=document.getElementById("sign-up-confirm-password").value;let data={githubAccount:document.getElementById("sign-up-github-account").value.trim(),jobTitle:document.getElementById("sign-up-job-title").value.trim(),company:document.getElementById("sign-up-company").value.trim(),country:document.getElementById("sign-up-country").value.trim(),genders:"",genderDetails:"",age:document.getElementById("sign-up-age").value.trim(),level:document.getElementById("sign-up-level").value.trim(),interest:document.getElementById("sign-up-interest").value.trim(),industry:document.getElementById("sign-up-industry").value.trim(),industryDetails:document.getElementById("sign-up-industry-details").value.trim(),}
if(email=="")
formError("Email is empty.");else if(password=="")
formError("Password is empty.");else if(password.length<8){formError("Password must be at least 8 characters long.");var inputs=document.querySelectorAll('input');Array.prototype.slice.call(inputs).forEach(function(elm){if(elm.type=="password")
elm.setCustomValidity("Password must be at least 8 characters long.");});}else if(password!=confirmPassword){formError("Passwords do not match.");var inputs=document.querySelectorAll('input');Array.prototype.slice.call(inputs).forEach(function(elm){if(elm.type=="password")
elm.setCustomValidity("Passwords do not match.");});}
else if(!checkEmailSyntax(email))
formError("Not a valid email address");else{let result=await backend.verifySignUp(email,password,data);if(result.verifyEmail&&result.token){localStorage.sessionToken=result.token;await backend.sendEmailVerificationCode(localStorage.sessionToken);location.href="/confirm-email.html";}else if(result.error){var inputs=document.querySelectorAll('input');Array.prototype.slice.call(inputs).forEach(function(elm){if(elm.type=="email"||elm.type=="password")
elm.setCustomValidity(result.error);});formError(result.error);}else{console.log("Unexpected sign-in result",result);}}}
async function verifyEmail(){let verificationCode=document.getElementById("verification-code").value.trim();let result=await backend.checkEmailVerificationCode(localStorage.sessionToken,verificationCode);if(result.ok)
location.href="/";else if(result.error)
formError(result.error);else
console.log("Unexpected verify-email result",result);}
async function resendVerificationCode(){await backend.sendEmailVerificationCode(localStorage.sessionToken);}
async function confirmEmail(){resendVerificationCode();location.href="/confirm-email.html";}
async function forgotPassword(){let email=document.getElementById("sign-in-email").value.trim();if(email=="")
formError("Email is empty.");else if(!checkEmailSyntax(email))
formError("Not a valid email address");else{let result=await backend.sendPasswordResetCode(email);if(result.error)
formError(result.error);else{localStorage.resetPasswordEmail=email;location.href="/reset-password.html?email="+email;}}}
async function resetPassword(){let email=document.getElementById("reset-email").value.trim();let resetCode=document.getElementById("reset-code").value.trim();let newPassword=document.getElementById("reset-new-password").value;let confirmPassword=document.getElementById("reset-confirm-password").value;if(email=="")
formError("Email is empty.");else if(resetCode=="")
formError("Reset code is empty.");else if(newPassword=="")
formError("Password is empty.");else if(newPassword.length<8)
formError("Password must be at least 8 characters long.");else if(newPassword!=confirmPassword)
formError("Passwords do not match.");else if(!checkEmailSyntax(email))
formError("Not a valid email address");else{let result=await backend.resetPassword(email,resetCode,newPassword);if(result.error){formError(result.error);}else if(result.token){localStorage.sessionToken=result.token;location.href="/";}}}
async function updateProfile(){let data={githubAccount:document.getElementById("profile-github-account").value.trim(),jobTitle:document.getElementById("profile-job-title").value.trim(),company:document.getElementById("profile-company").value.trim(),country:document.getElementById("profile-country").value.trim(),genders:"",genderDetails:"",age:document.getElementById("profile-age").value.trim(),level:document.getElementById("profile-level").value.trim(),interest:document.getElementById("profile-interest").value.trim(),industry:document.getElementById("profile-industry").value.trim(),industryDetails:document.getElementById("profile-industry-details").value.trim(),}
let result=await backend.updateUserProfile(localStorage.sessionToken,{data:data});if(result.ok)
formResult("Saved.");else if(result.error)
formError(result.error);else
console.log("Unexpected result updateProfile() ->",result);}
async function changePassword(){let password=document.getElementById("change-password-password").value;let newPassword=document.getElementById("change-password-new-password").value;let confirmPassword=document.getElementById("change-password-confirm-password").value;if(password=="")
formError("Password is empty.");else if(newPassword=="")
formError("New password is empty.");else if(newPassword.length<8)
formError("Password must be at least 8 characters long.");else if(newPassword!=confirmPassword)
formError("Passwords do not match.");else{let result=await backend.changePassword(localStorage.sessionToken,password,newPassword);if(result.error)
formError(result.error);else
formResult("Password changed.");}
document.getElementById("change-password-password").value="";document.getElementById("change-password-new-password").value="";document.getElementById("change-password-confirm-password").value="";}
async function confirmDeleteAccount(){let password=document.getElementById("delete-account-password").value;let result=await backend.deleteAccount(localStorage.sessionToken,password);if(result.ok){localStorage.removeItem("sessionToken");location.href="/";}else{formError(result.error);}}
async function initProfile(){let user=await backend.getUserProfile(localStorage.sessionToken)
if(user.error){localStorage.removeItem("sessionToken");location.href="/sign-in.html";}else{let userEmailAddress=document.getElementById("user-email-address");let verified=document.getElementById("user-email-verified");let license=document.getElementById("license");userEmailAddress.textContent=user.email;if(!user.emailVerified)
verified.innerHTML='<input type="submit" style="width: 100%;" name="commit" value="Verify" class="form-submit" onclick="confirmEmail(); return false;"  data-disable-with="Update…" />';if(!user.emailVerified)
license.textContent="(email must be verified to see licenses)"
else if(user.license)
license.textContent=user.license;else
license.textContent="Beta License";let data=user.data;if(data){if(data.githubAccount)
document.getElementById("profile-github-account").value=data.githubAccount;if(data.jobTitle)
document.getElementById("profile-job-title").value=data.jobTitle;if(data.company)
document.getElementById("profile-company").value=data.company;if(data.country)
document.getElementById("profile-country").value=data.country;if(data.age)
document.getElementById("profile-age").value=data.age;if(data.level)
document.getElementById("profile-level").value=data.level;if(data.interest)
document.getElementById("profile-interest").value=data.interest;if(data.industry)
document.getElementById("profile-industry").value=data.industry;if(data.industryDetails)
document.getElementById("profile-industry-details").value=data.industryDetails;{let let_me_type=document.getElementById("let-me-type-industry");let let_me_type_row=document.getElementById("let-me-type-industry-row");let_me_type_row.style.display=let_me_type.selected?"flex":"none";}
$(".chosen-select").trigger("chosen:updated");}}}
async function initConfirmEmailAddress(){let email=null;if(localStorage.sessionToken){email=await backend.getUserEmail(localStorage.sessionToken);}else if(localStorage.resetPasswordEmail)
email=localStorage.resetPasswordEmail;if(!email)
return;let confirmEmailAddress=document.getElementById("confirm-email-address");if(confirmEmailAddress)
confirmEmailAddress.textContent=email;let resetEmail=document.getElementById("reset-email")
if(resetEmail)
resetEmail.value=email;}
async function apiDoc()
{let user=await backend.getUserProfile(localStorage.sessionToken);if(user.error){let modal=document.createElement("div");modal.style.position="fixed";modal.style.zIndex=1;modal.style.left=0;modal.style.top=0;modal.style.width="100%";modal.style.height="100%";modal.style.overflow="auto";modal.style.backgroundColor="rgba(255,255,255,0.75)";document.getElementsByClassName("md")[0].style.filter="blur(2px)";let modalContent=document.createElement("div");modalContent.style.margin="4rem auto";modalContent.style.padding="20px";modalContent.style.border="2px solid #ccc";modalContent.style.width="min(40rem, 80%)";modalContent.style.filter="none";modalContent.style.backgroundColor="#eee";modalContent.innerHTML='<h1 style="text-align: center; margin-bottom: 5rem;">Sign in to access API docs</h1>   <p style="text-align:center"><a class="btn btn-primary" href="/sign-in.html">Sign In</a></p>';modal.append(modalContent);document.body.append(modal);}}
async function like(thing){let result=await backend.like(localStorage.sessionToken,thing,true);if(result.error)
console.log(result.error);updateLikeCounters();}
async function unlike(thing){let result=await backend.like(localStorage.sessionToken,thing,false);if(result.error)
console.log(result.error);updateLikeCounters();}
function getChildByClass(elem,className){for(var i=0;i<elem.childNodes.length;i++){if(!elem.childNodes[i].classList)
continue;if(elem.childNodes[i].classList.contains(className))
return elem.childNodes[i];}
return null;}
async function updateLikeCounters(){let likes=await backend.listLikes(localStorage.sessionToken);if(likes.error){console.log(likes.error);return;}
let countLookup={};let userLookup={}
for(const count of(likes.likeCounts||[])){countLookup[count.thing]=count.count;}
for(const thing of(likes.userLikes||[])){userLookup[thing]=true;}
let lc=document.getElementsByClassName("like-counter");for(let i=0;i<lc.length;i++){let elem=lc[i];let thing=elem.getAttribute("like-thing");if(userLookup[thing]){elem.classList.add("liked");elem.onclick=function(){unlike(thing);};}else{elem.classList.remove("liked");elem.onclick=function(){like(thing);};}
if(localStorage.sessionToken){elem.style.cursor="pointer";}else{elem.style.cursor="auto";}
let count=getChildByClass(elem,"like-counter-count");if(count)
count.innerText=countLookup[thing]||0;}}
let restoreLoginStyles=new Map();function initLogin(){if(document.domain=="www.ourmachinery.com")
window.location.href="https://ourmachinery.com"+window.location.pathname;if(localStorage.sessionToken){hideClass("signed-out-only");}else{hideClass("signed-in-only");}};function md5(string){function RotateLeft(lValue,iShiftBits){return(lValue<<iShiftBits)|(lValue>>>(32-iShiftBits));}
function AddUnsigned(lX,lY){var lX4,lY4,lX8,lY8,lResult;lX8=(lX&0x80000000);lY8=(lY&0x80000000);lX4=(lX&0x40000000);lY4=(lY&0x40000000);lResult=(lX&0x3FFFFFFF)+(lY&0x3FFFFFFF);if(lX4&lY4){return(lResult^0x80000000^lX8^lY8);}
if(lX4|lY4){if(lResult&0x40000000){return(lResult^0xC0000000^lX8^lY8);}else{return(lResult^0x40000000^lX8^lY8);}}else{return(lResult^lX8^lY8);}}
function F(x,y,z){return(x&y)|((~x)&z);}
function G(x,y,z){return(x&z)|(y&(~z));}
function H(x,y,z){return(x^y^z);}
function I(x,y,z){return(y^(x|(~z)));}
function FF(a,b,c,d,x,s,ac){a=AddUnsigned(a,AddUnsigned(AddUnsigned(F(b,c,d),x),ac));return AddUnsigned(RotateLeft(a,s),b);};function GG(a,b,c,d,x,s,ac){a=AddUnsigned(a,AddUnsigned(AddUnsigned(G(b,c,d),x),ac));return AddUnsigned(RotateLeft(a,s),b);};function HH(a,b,c,d,x,s,ac){a=AddUnsigned(a,AddUnsigned(AddUnsigned(H(b,c,d),x),ac));return AddUnsigned(RotateLeft(a,s),b);};function II(a,b,c,d,x,s,ac){a=AddUnsigned(a,AddUnsigned(AddUnsigned(I(b,c,d),x),ac));return AddUnsigned(RotateLeft(a,s),b);};function ConvertToWordArray(string){var lWordCount;var lMessageLength=string.length;var lNumberOfWords_temp1=lMessageLength+8;var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1%64))/64;var lNumberOfWords=(lNumberOfWords_temp2+1)*16;var lWordArray=Array(lNumberOfWords-1);var lBytePosition=0;var lByteCount=0;while(lByteCount<lMessageLength){lWordCount=(lByteCount-(lByteCount%4))/4;lBytePosition=(lByteCount%4)*8;lWordArray[lWordCount]=(lWordArray[lWordCount]|(string.charCodeAt(lByteCount)<<lBytePosition));lByteCount++;}
lWordCount=(lByteCount-(lByteCount%4))/4;lBytePosition=(lByteCount%4)*8;lWordArray[lWordCount]=lWordArray[lWordCount]|(0x80<<lBytePosition);lWordArray[lNumberOfWords-2]=lMessageLength<<3;lWordArray[lNumberOfWords-1]=lMessageLength>>>29;return lWordArray;};function WordToHex(lValue){var WordToHexValue="",WordToHexValue_temp="",lByte,lCount;for(lCount=0;lCount<=3;lCount++){lByte=(lValue>>>(lCount*8))&255;WordToHexValue_temp="0"+lByte.toString(16);WordToHexValue=WordToHexValue+WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);}
return WordToHexValue;};function Utf8Encode(string){string=string.replace(/\r\n/g,"\n");var utftext="";for(var n=0;n<string.length;n++){var c=string.charCodeAt(n);if(c<128){utftext+=String.fromCharCode(c);}
else if((c>127)&&(c<2048)){utftext+=String.fromCharCode((c>>6)|192);utftext+=String.fromCharCode((c&63)|128);}
else{utftext+=String.fromCharCode((c>>12)|224);utftext+=String.fromCharCode(((c>>6)&63)|128);utftext+=String.fromCharCode((c&63)|128);}}
return utftext;};var x=Array();var k,AA,BB,CC,DD,a,b,c,d;var S11=7,S12=12,S13=17,S14=22;var S21=5,S22=9,S23=14,S24=20;var S31=4,S32=11,S33=16,S34=23;var S41=6,S42=10,S43=15,S44=21;string=Utf8Encode(string);x=ConvertToWordArray(string);a=0x67452301;b=0xEFCDAB89;c=0x98BADCFE;d=0x10325476;for(k=0;k<x.length;k+=16){AA=a;BB=b;CC=c;DD=d;a=FF(a,b,c,d,x[k+0],S11,0xD76AA478);d=FF(d,a,b,c,x[k+1],S12,0xE8C7B756);c=FF(c,d,a,b,x[k+2],S13,0x242070DB);b=FF(b,c,d,a,x[k+3],S14,0xC1BDCEEE);a=FF(a,b,c,d,x[k+4],S11,0xF57C0FAF);d=FF(d,a,b,c,x[k+5],S12,0x4787C62A);c=FF(c,d,a,b,x[k+6],S13,0xA8304613);b=FF(b,c,d,a,x[k+7],S14,0xFD469501);a=FF(a,b,c,d,x[k+8],S11,0x698098D8);d=FF(d,a,b,c,x[k+9],S12,0x8B44F7AF);c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);a=FF(a,b,c,d,x[k+12],S11,0x6B901122);d=FF(d,a,b,c,x[k+13],S12,0xFD987193);c=FF(c,d,a,b,x[k+14],S13,0xA679438E);b=FF(b,c,d,a,x[k+15],S14,0x49B40821);a=GG(a,b,c,d,x[k+1],S21,0xF61E2562);d=GG(d,a,b,c,x[k+6],S22,0xC040B340);c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);b=GG(b,c,d,a,x[k+0],S24,0xE9B6C7AA);a=GG(a,b,c,d,x[k+5],S21,0xD62F105D);d=GG(d,a,b,c,x[k+10],S22,0x2441453);c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);b=GG(b,c,d,a,x[k+4],S24,0xE7D3FBC8);a=GG(a,b,c,d,x[k+9],S21,0x21E1CDE6);d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);c=GG(c,d,a,b,x[k+3],S23,0xF4D50D87);b=GG(b,c,d,a,x[k+8],S24,0x455A14ED);a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);d=GG(d,a,b,c,x[k+2],S22,0xFCEFA3F8);c=GG(c,d,a,b,x[k+7],S23,0x676F02D9);b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);a=HH(a,b,c,d,x[k+5],S31,0xFFFA3942);d=HH(d,a,b,c,x[k+8],S32,0x8771F681);c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);a=HH(a,b,c,d,x[k+1],S31,0xA4BEEA44);d=HH(d,a,b,c,x[k+4],S32,0x4BDECFA9);c=HH(c,d,a,b,x[k+7],S33,0xF6BB4B60);b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);d=HH(d,a,b,c,x[k+0],S32,0xEAA127FA);c=HH(c,d,a,b,x[k+3],S33,0xD4EF3085);b=HH(b,c,d,a,x[k+6],S34,0x4881D05);a=HH(a,b,c,d,x[k+9],S31,0xD9D4D039);d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);b=HH(b,c,d,a,x[k+2],S34,0xC4AC5665);a=II(a,b,c,d,x[k+0],S41,0xF4292244);d=II(d,a,b,c,x[k+7],S42,0x432AFF97);c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);b=II(b,c,d,a,x[k+5],S44,0xFC93A039);a=II(a,b,c,d,x[k+12],S41,0x655B59C3);d=II(d,a,b,c,x[k+3],S42,0x8F0CCC92);c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);b=II(b,c,d,a,x[k+1],S44,0x85845DD1);a=II(a,b,c,d,x[k+8],S41,0x6FA87E4F);d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);c=II(c,d,a,b,x[k+6],S43,0xA3014314);b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);a=II(a,b,c,d,x[k+4],S41,0xF7537E82);d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);c=II(c,d,a,b,x[k+2],S43,0x2AD7D2BB);b=II(b,c,d,a,x[k+9],S44,0xEB86D391);a=AddUnsigned(a,AA);b=AddUnsigned(b,BB);c=AddUnsigned(c,CC);d=AddUnsigned(d,DD);}
var temp=WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);return temp.toLowerCase();}